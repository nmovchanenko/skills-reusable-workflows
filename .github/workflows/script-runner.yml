name: Run JS script

on:
  schedule:
    - cron: '10 12 * * *'
    - cron: '15 12 * * *'

  workflow_dispatch:
    inputs:
      environment_name:
        description: "Select Environment"
        required: false
        type: choice
        options:
          - ''
          - "staging"
          - "integration"

permissions: write-all

env:
  environment_name: ${{ inputs.environment_name || 'staging'}}

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Set test tag to "@msa-nightly"
        if: github.event.schedule == '10 12 * * *'
        run: echo "TEST_TAG=@msa-nightly" >> $GITHUB_ENV

      - name: Set test tag to "@quoteservice-feature"
        if: github.event.schedule == '15 12 * * *'
        run: echo "TEST_TAG=@quoteservice-feature" >> $GITHUB_ENV

      - uses: actions/checkout@v2
      - name: Install packages
        run: npm i

      - name: Run Script if isScheduled
        if: ${{ github.event_name == 'schedule'}}
        run: |
          echo 'this is for scheduled only:'
          echo ${{ github.event_name == 'schedule'}}
          echo ${{ env.environment_name }}
          echo ${{ env.TEST_TAG }}

      - name: Run Script if NOT isScheduled
        if: ${{ github.event_name != 'schedule'}}
        run: |
          echo 'this is for NOT scheduled only:'
          echo "REPORT_TITLE=Monolith Nightly Test Run (Group 1)" >> $GITHUB_ENV
          echo ${{ github.event_name == 'schedule'}}
          echo ${{ env.environment_name }}
          echo ${{ env.TEST_TAG }}

      - name: Run Playwright Tests
        shell: bash
        run: |
          echo "enable_dispatch=true" >> $GITHUB_ENV
          echo "service_version=v1" >> $GITHUB_ENV
          echo "report_title=Monolith Deployment Criteria Test Run" >> $GITHUB_ENV
          echo "token_prefix=monolith-deployment-criteria-test" >> $GITHUB_ENV
          echo "slack_channel=TECH_QA_MONOLITH_DEPLOYMENT" >> $GITHUB_ENV
          echo ${{ env.REPORT_TITLE }}

      - name: Print
        run: env | sort

      # - name: Run Script
      #   run: |
      #     ls
      #     grep -rEo "<(C[^>]+)>" src
      #     grep -rEo "<(C[^>]+)>" src | grep -Eo C"\d+"

      #     ENV=${{ inputs.environment_name }} REPO_OWNER=${{ github.repository_owner }} REPO_NAME=${{ github.repository }} GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} node src/index.js
