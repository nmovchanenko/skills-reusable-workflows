name: Automation
on:
  schedule:
    - cron: "30 15 * * *"
    - cron: "40 15 * * *"
    - cron: "50 15 * * *"
    - cron: "00 16 * * *"
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment to run test"
        required: true
        type: choice
        options:
          - integration
          - staging
      test_tag:
        description: "Test tags to run"
        required: true
        type: choice
        default: "msa-nightly"
        options:
          - "msa-nightly"
          - "quoteservice-feature"

  repository_dispatch:
    types:
      - MSARegression/*

permissions: write-all

jobs:
  monolith_nightly:
    name: IQuality Monolith Nightly Tests
    runs-on: ubuntu-latest
    env:
      TEST_TAG: ${{ inputs.test_tag }}
      ENVIRONMENT: ${{ github.event_name == 'schedule' && 'staging' || (github.event_name == 'repository_dispatch' && github.event.client_payload.environment || inputs.environment )}}
      SERVICE: ${{ github.event_name == 'repository_dispatch' && github.event.client_payload.serviceName || 'all' }}
    environment: ${{ github.event_name == 'schedule' && 'staging' || (github.event_name == 'repository_dispatch' && github.event.client_payload.environment || inputs.environment )}}
    steps:
      - name: Set dispatch param if conditions meet
        id: set_dispatch_param
        if: github.event_name == 'repository_dispatch' && env.ENVIRONMENT_NAME == 'integration'
        run: |
          echo "TEST_TAG=msa-nightly" >> $GITHUB_ENV
          echo "dispatchParams={\"enabled\": \"true\", \"minPassRate\": \"50\", \"type\": \"PromoteToStaging/${{ env.SERVICE }}\", \"version\": {\"services\":\"${{ env.SERVICE }}\"}, \"repo\": \"theguarantors/tg-fluxcd\" }" >> $GITHUB_OUTPUT
    
      - name: Set "Group 1" env on schedule
        if: github.event.schedule == '30 15 * * *'
        run: echo "TEST_TAG=monolith-nightly-group-1" >> $GITHUB_ENV

      - name: Set "Group 2" env on schedule
        if: github.event.schedule == '40 15 * * *'
        run: echo "TEST_TAG=monolith-nightly-group-2" >> $GITHUB_ENV

      - name: Set "Group 3" env on schedule
        if: github.event.schedule == '50 15 * * *'
        run: echo "TEST_TAG=monolith-nightly-group-3" >> $GITHUB_ENV

      - name: Set "Group 4" env on schedule
        if: github.event.schedule == '00 16 * * *'
        run: echo "TEST_TAG=monolith-nightly-group-4" >> $GITHUB_ENV

      - name: Print Env list
        run: env | sort

      - name: Invoke AWS Step Function
        run: |
          echo "Monolith Nightly Test Run (${{ env.TEST_TAG }})"
          echo "runTokenPrefix: ${{ env.TEST_TAG }}"
          echo "environment: ${{ env.ENVIRONMENT_NAME }}"
          echo "testCaseIdentifiers: '[@${{ env.TEST_TAG }}]'"
          echo "slackChannel: tech_qa_monolith"
